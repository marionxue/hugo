[
    {
        "description": "英语学习终极秘诀 - 把你的英语用起来",
        "uri": "learn-english",
        "content": "Sam                            smile        Sam                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Samboss      boss                       GRE                  boss     boss                                                                                                                                                                                                                                                                                                                                ABC                                                                                                                                                           newbieboss                                                                                                                                       pdf epub          Podcast   A Day life Jeff                                                   Download          pdf epub mobi                       blush   h2  margin bottom 2em  margin right  5px  padding  8px 15px  letter spacing  2px  background image  linear gradient to right bottom  rgb 0  188  212   rgb 63  81  181    background color  rgb 63  81  181   color  rgb 255  255  255   border left  10px solid rgb 51  51  51   border radius 5px  text shadow  rgb 102  102  102  1px 1px 1px  box shadow  rgb 102  102  102  1px 1px 2px     note   font size  1 5rem  font style  italic  padding  0 1rem  margin  2 5rem 0  position  relative  background color   fafeff  border top  1px dotted  9954bb  border bottom  1px dotted  9954bb     note title   padding  0 2rem 0 5rem  background   9954bb  color   FFF  position  absolute  left  0  top  0 25rem  box shadow  0 2px 4px rgba 0 0 0 0 2   border radius  4px   webkit transform  rotate  5deg  translateX  10px  translateY  25px    moz transform  rotate  5deg  translateX  10px  translateY  25px    ms transform  rotate  5deg  translateX  10px  translateY  25px    o transform  rotate  5deg  translateX  10px  translateY  25px   transform  rotate  5deg  translateX  10px  translateY  25px      inline yellow   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   f0ad4e     inline green   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   5cb85c     inline blue   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   2780e3     inline purple   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   9954bb     div border left red   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   df3e3e     div border left yellow   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   f0ad4e     div border left green   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   5cb85c     div border left blue ",
        "objectID": "learn-english",
        "title": "英语学习终极秘诀",
        "subtitle": "把你的英语用起来",
        "date": "2018-05-25T06:46:19.000Z",
        "draft": false,
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ],
        "postmeta": false,
        "nocomment": true
    },
    {
        "title": "2017 年的小目标",
        "uri": "posts/2017-targets",
        "content": "9      2016               1                                                 2                                  3                             4                5              6              7  500           8   CEO          9               10                                 2017             1                  2                     3             4        6        4",
        "objectID": "posts/2017-targets",
        "date": "2017-07-26T19:09:28.000Z",
        "draft": false,
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "calico Router reflection(RR) 模式介绍及部署",
        "uri": "posts/calico-rr",
        "content": "1       endpoint             endpoint  heart  AS                     BGP              ibgp AS     BGP Speaker          ibgp ebgp        ebgp AS     BGP Speaker          ibgp      ebgp        workloadEndpoint Calico                 endpoint hostEndpoints Calico         node     2       Calico          IP                  workload endpoint wl     nodeA          nodeB      B                                                                                                            ConA         ConB                                                                         wl A     wl B                       node A                 node B                     type1  lan                                                 type2  different network                                               Routers                                       ConA      ConB      nodeA   wl A       nodeA             iptables         nodeB     nodeA   nodeB                    node B                 nodeA   nodeB                                    node B        nodeA                node      BGP              node            bird        BGP Speaker     node    BGP                       node       node              X X X X   IP                              node       workload endpoint         3  BGP   BGP                  AS Autonomous System             AS                                                    16    ID      64512   65535   1023                  calico     AS  64512            calicoctl config asNumber      calicoctl config set asNumber 64512       BGP speaker    ibgp ebgp ebgp          ebgp    BGP         BGP speaker    BGP                BGP speaker             BGP speaker              calico   node             bird  node                            BGP Speaker                    Router reflection RR     3 1 BGP Speaker                 BGP Speaker          BGP Speaker    bgp        bgp mesh       bgp         O n 2           BGP Speaker             Calico                                             calicoctl config set nodeTonodeMesh off   calicoctl config set nodeTonodeMesh 3 2 BGP Speaker RR    RR                 BGP Speaker         Router Reflector  RR      BGP Speaker    bgp        BGP Speaker      RR                     RR        BGP Speaker    BGP                     Calico       Global Peer    RR     Global Peer     BGP Speaker        Calico         node     Global peer    BGP                  RR    Global Peers     Calico   Calico         RR              node  4  RR              IP                             10 10 31 190   kube master     10 10 31 193   kube node1     10 10 31 194   kube node2     10 10 31 168   node1   4 1   node1               docker run   privileged   net host  d    e IP      e IP6      e ETCD_ENDPOINTS     v      e ETCDCACERT_FILE      e ETCDCERTFILE      e ETCDKEYFILE     calico routereflector v0 4 0         etcd            4 2                  ipv4      etcd           calico bgp v1 rr_v4  ipv6      etcd           calico bgp v1 rr_v6        json     ip        cluster_id           curl         etcd   IPv4 entries   curl   cacert   cert   key  L https    2379 v2 keys calico bgp v1 rrv4   XPUT  d value     ip          clusterid          IPv6 entries   curl   cacert   cert   key  L https    2379 v2 keys calico bgp v1 rrv6   XPUT  d value     ip          clusterid                curl   cacert   cert   key  L https   10 10 31 190 2379 v2 keys calico bgp v1 rrv4 10 10 31 168  XPUT  d value     ip     10 10 31 168     clusterid     1 0 0 1     4 3    calico                  calicoctl config set nodeToNodeMesh off              calicoctl nodes   output wide            calicoctl config asNumber   RR    Global Peers     Calico     calicoctl create  f   scope  global spec  asNumber  EOF        ipv4   ipv6               BGP      TCP 179            node1         ss  tnp grep 179 ESTAB 0 0 10 10 31 168 179 10 10 31 196 55967 users    bird  pid 10601 fd 8   ESTAB 0 0 10 10 31 168 56393 10 10 31 193 179 users    bird  pid 10601 fd 9   ESTAB 0 0 10 10 31 168 41164 10 10 31 194 179 users    bird  pid 10601 fd 10     node1             docker exec 52e584f5bcf3 cat  config bird cfg Generated confd router id 10 10 31 168  Watch interface up down events  protocol device   scan time 2    Scan interfaces every 2 seconds   Template BGP clients template bgp bgp_template   debug off  description  Connection BGP peer   multihop  import all    Import routes  don t know upstream topology therefore trust ToR RR  export all    Export all  source address 10 10 31 168    local address use TCP connection graceful restart    comment kernel section graceful restart                  RR to RR full mesh               RR 10 10 31 168 Skipping ourselves               RR global peer               RR global peer calico nodes  Peering Calico node node1 protocol bgp Global101031193 bgp_template   local 64512  neighbor 10 10 31 193 64512  rr client  rr cluster id 1 0 0 1    Peering Calico node node2 protocol bgp Global101031194 bgp_template   local 64512  neighbor 10 10 31 194 64512  rr client  rr cluster id 1 0 0 1    Peering Calico node node3 protocol bgp Global101031196",
        "objectID": "posts/calico-rr",
        "subtitle": "通过 calico RR 模式来使 K8S 支撑容纳更多的 node",
        "date": "2018-02-01T11:03:49.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes",
            "docker"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Kubernetes 中的容器运行时",
        "uri": "posts/container-runtime",
        "content": "Container Runtime   Kubernetes                           Kubelet    Container Runtime Interface  CRI                             Container Runtime Interface  CRI     Kubelet 1 5   kubelet 1 6                   Kubelet Container Runtime API         Pod     API       Sandbox   Container   API                     CRI      1 4               v1 5             v1 6                  frakti cri o   alpha    v1 7       cri containerd   alpha      frakti   cri o      beta     1  CRI    CRI    gRPC     RuntimeService   ImageService                      v1 10   pkg kubelet apis cri v1alpha2 runtime v1 7 v1 9  pkg kubelet apis cri v1alpha1 runtime v1 6  pkg kubelet api v1alpha1 runtime Kubelet    CRI        Runtime          CRI          kubelet          kubelet   container runtime remote   container runtime endpoint unix    var run crio crio sock    2         Container Runtime      Container Runtime       CRI gRPC Server    RuntimeService   ImageService   gRPC Server          unix socket Linux    unix socket    Windows    tcp                         Container Runtime     3        Container Runtime              CRI                 Docker            kubelet    pkg kubelet dockershim                 Runtime HyperContainer     Kubernetes v1 6       hypervisor   docker                         NFV     Runc       cri o   cri containerd cri containerd     kubernetes v1 7  cri o     Kubernetes v1 6          runc   intel clear container Rkt      Mirantis       libvirt          qcow2    Infranetes       IaaS         GCE AWS   cri containerd   containerd       dockershim   docker daemon     cri containerd       cri containerd      Kubelet CRI      Kubelet    Image Service   Runtime Service         containerd   gRPC               CNI     Pod       4  CRI Tools                Container Runtime          cri tools            crictl      docker              Kubelet      Container Runtime               critest  CRI                Container Runtime       CRI               libpod           podman     crictl           oci              buildah  h2  margin bottom 2em  margin right  5px  padding  8px 15px  letter spacing  2px  background image  linear gradient to right bottom  rgb 0  188  212   rgb 63  81  181    background color  rgb 63  81  181   color  rgb 255  255  255   border left  10px solid rgb 51  51  51   border radius 5px  text shadow  rgb 102  102  102  1px 1px 1px  box shadow  rgb 102  102  102  1px 1px 2px     inline yellow   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   f0ad4e     inline green   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   5cb85c     inline blue   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   2780e3     inline purple   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   9954bb     div border left red   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   df3e3e     div border left yellow   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   f0ad4e     div border left green   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   5cb85c     div border left blue   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   2780e3     div border left purple   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   9954bb     div border right red   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   df3e3e     div border right yellow   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   f0ad4e     div border right green   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   5cb85c     div border right blue   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   2780e3     div border right purple   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   9954bb     div border top red   display  block  padding  10px  margin  10px 0  bord",
        "objectID": "posts/container-runtime",
        "subtitle": "容器运行时接口解析",
        "date": "2018-04-03T06:50:43.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes",
            "docker"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "CRI-O 简介",
        "uri": "posts/cri-o",
        "content": "https   www yangcs net posts container runtime                                            CRI O  1  CRI O            Container Runtime          Red Hat                                   Kubernetes          skunkworks         CRI O            CRI      2017 Kubecon Austin         Walsh       CRI O                  Unix                             Red Hat   CRI O     Mrunal Patel              Red Hat   2016       OpenShift                    Intel   SUSE     CRI O   CRI          OCI   Docker                    GPG               Container Network Interface CNI             CNI                OpenShift                     CoW            overlay aufs          Btrfs  2  CRI O        CRI O                                    CRI O      Clear Containers                                      Kubernetes         Kubernetes                   Kubernetes             CRI O      CRI O       runc        OCI                 Kubernetes         CRI O               Linux                        CRI O                                                Kubernetes    kubelet      pod  kubelet    CRI Container runtime interface         CRI O daemon  CRI O    containers image                                     containers storage      COW               rootfs    CRI O    oci runtime tool      OCI       json           OCI Generate tools          CRI O            CRI                     runc              conmon      conmon      pid   1         pty                                    CNI            CNI        CRI O              conmon    Patel    conmon      C                conmon         TTY         out of memory        conmon        systemd               CRI O       systemd                sytemd     cgroup         systemd      systemctl                    conmon   CRI daemon             CRI O                                 Docker         Docker                    Kubernetes                            3      CRI O 1 0  2017 10       Kubernetes 1 7    CRI O 1 8 1 9         Kubernetes   1 8  1 9            Kubernetes     CRI O   Openshift 3 7     beta     Patel     Openshift 3 9             3 10               Docker                        Kata Containers       VM         kube spawn            NFS  GlusterFS                      casync    libtorrent                               CRI O     GitHub         CRI O     4     CRI O Alternative Runtimes Kubernetes Lightweight Container Runtime Kubernetes CRI O Support Kubernetes CRI O 1 0     h2  margin bottom 2em  margin right  5px  padding  8px 15px  letter spacing  2px  background image  linear gradient to right bottom  rgb 0  188  212   rgb 63  81  181    background color  rgb 63  81  181   color  rgb 255  255  255   border left  10px solid rgb 51  51  51   border radius 5px  text shadow  rgb 102  102  102  1px 1px 1px  box shadow  rgb 102  102  102  1px 1px 2px     inline yellow   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   f0ad4e     inline green   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   5cb85c     inline blue   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   2780e3     inline purple   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   9954bb     div border left red   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   df3e3e     div border left yellow   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   f0ad4e     div border left green   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   5cb85c     div border left blue   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   2780e3     div border left purple   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   9954bb     div border right red   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   df3e3e     div border right yellow   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   f0ad4e     div border right green   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   5cb85c     div border right blue  ",
        "objectID": "posts/cri-o",
        "subtitle": "轻量级容器运行时 CRI-O 解析",
        "date": "2018-04-03T08:11:38.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes",
            "docker"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Device Mapper系列 (1)：Device Mapper 技术",
        "uri": "posts/devicemapper-theory",
        "content": "1  Device Mapper     emsp  emsp  Device Mapper   linux                    framework              docker   devicemapper                    thin provisioning           docker           Device Mapper        devicemapper           Device Mapper   emsp  emsp Device Mapper     AUFS ext4 NFS                File System     Linux                                                                                  emsp  emsp         Linux           LVM2 Linux Volume Manager 2 version  EVMS Enterprise Volume Management System  dmraid Device Mapper Raid Tool               emsp  emsp        Device Mapper        block            file  Device Mapper   Linux 2 6 9     Linux         Linux    2 6 9           Device Mapper                  docker          RHEL   CentOS     docker            overlay   emsp  emsp devicemapper           docker                                             Docker                         2            Device Mapper                                                                            device mapper    dmsetup              device mapper                                               IO                 IO             Device Mapper      3  Device Mapper      Device Mapper    Linux                                   mapped device      map table       target device                                                                                                                    Device Mapper                                                                                                                               Target                                512               128            128 512 64K                Device Mapper                Target Driver       IO                             Raid                     Linux                  Device Mapper    IO                                         4  Docker    Device Mapper      Docker   devicemapper           copy on write      thin provisioning       snapshot                    CoW copy write                      aufs   cow                            branch      branch         branch                             CoW                    branch           branch                                         file1                file1                                                       file1      file1                  wh               file1            file1                    devicemapper        block      Snapshot                                                                                                                           Thin provisioning               Thin provisioning                                                                                          N   N           32              2GB                                                                                                                                                                                   Thin Provisioning                                                 Fat Provisioning      Thin Provisioning                                Docker       Thin Provisioning         UnionFS               Docker     Thin Provisioning   Snapshot                 Thin Provisioning   Snapshot  Device Mapper    1  Device Mapper    Device Mapper    2  Thin Provisioning    Device Mapper    3  Docker     devicemapper",
        "objectID": "posts/devicemapper-theory",
        "subtitle": "Device Mapper 原理剖析",
        "date": "2018-01-21T09:28:41.000Z",
        "draft": false,
        "categories": "docker",
        "tags": [
            "docker"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Kubernetes 使用集群联邦实现多集群管理",
        "uri": "posts/federation",
        "content": "Host Node          Available Zone          Region          Cloud Service Provider       K8s                                    K8s                                                    Region                                         Fail                                                                     Federation               Federation           Region          Kubernetes                      1  Kubernetes            kuberntes              kubernetes                API server         Kubernetes API      etcd                 Kubernetes                     kubernetes     Federation          federation apiserver    kube apiserver           REST API federation controller manager    kube controller manager               kubefed Federation                Federation   API Server     Federation     K8s Cluster       Federation   API Server       API     Federation API Server            K8s Cluster          API                K8s Federation           Cluster                    K8s Cluster             K8s Cluster                  K8s Cluster          Cluster                                      K8s Cluster                 K8s                  K8s Federation             K8s            Federation                  Kubernetes          kube dns               DNS       DNS    service       kubernetes     Kubernetes        kubernetes POD        POD                 POD                      kubernetes                  mysql          mysql POD         kubernetes              DNS       mysql                                    POD        Kubernetes                     kubernetes                            kubernetes                 kubernetes                   kubernetes                                 kubernetes                           kubernetes                                                                                                                                                   2                                                                                                                   k8s 1 9 Federation   CentOS 7 3   3               K8s  01   k8s 1 9 master node   CentOS 7 3   3              kubefed                                                       kubefed                        curl  LO https   storage cloud google com kubernetes federation release release   RELEASE VERSION  federation client linux amd64 tar gz   tar  xzvf federation client linux amd64 tar gz   federation release page             RELEASE VERSION                     PATH                       cp federation client bin kubefed  usr local bin   chmod  x  usr local bin kubefed    context            DCE         DCE     context           context                    kubeconfig      export KUBE_APISERVER  https   192 168 123 250 6443           kubectl config set cluster kubernetes     certificate authority  etc kubernetes ssl ca pem     embed certs true     server   KUBE_APISERVER              kubectl config set credentials admin     client certificate  etc kubernetes ssl admin pem     embed certs true     client key  etc kubernetes ssl admin key pem           kubectl config set context kubernetes     cluster kubernetes     user admin           kubectl config use context kubernetes     kubeconfig         kube config     Note    kube config                                kubectl config get contexts CURRENT NAME CLUSTER AUTHINFO NAMESPACE kubernetes kubernetes admin    CoreDNS         DNS     1         CoreDNS                            LoadBalancer               LoadBalancer               LoadBalancer        coredns     federation                    helm charts     CoreDNS  CoreDNS       etcd         etcd        etcd       helm charts            federation      node            failure domain beta kubernetes io region  failure domain beta kubernetes io zone  2          LoadBalancer              LoadBalancer                  keepalived cloud provider metalLB          metalLB  metalLB             yaml         kubectl apply  f https   raw githubusercontent com google metallb v0 5 0 manifests metallb yaml      https   metallb universe tf installation           LoadBalancer           IP          configmap                   cat metallb cm yaml apiVersion  v1 kind  ConfigMap metadata  namespace  metallb system name  config data  config    address pools  name  default protocol  layer2 addresses  192 168 1 58 192 168 1 60   kubectl create  f metallb cm yaml           https   metallb universe tf configuration             LoadBalancer            federation       clap  3     helm        helm       curl https   raw githubusercontent com kubernetes helm master scripts get   get_helm sh   chmod 700 get_helm sh     get_helm sh    tiller   serviceaccount   clusterrolebinding   kubectl create serviceaccount   namespace kube system tiller   kubectl create clusterrolebinding tiller cluster rule   clusterrole cluster admin   serviceaccount kube system tiller      helm     tiller   helm init         serviceAccount    kubectl patch deploy   namespace kube system tiller deploy  p    spec    template    spec    serviceAccount   tiller                   kubectl  n kube system pods grep til",
        "objectID": "posts/federation",
        "subtitle": "使用联邦服务进行跨集群服务发现",
        "date": "2018-03-22T09:36:27.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "docker 在本地如何管理 image（镜像）?",
        "uri": "posts/how-manage-image",
        "content": "docker        docker pull docker build docker commit docker load docker import         image    image    docker                 docker pull       image           1          docker     image         var lib docker       image                dockerd                    graph   g  var lib docker Root Docker runtime 2                image        docker pull                      image                   alpine         Note    sha256         abcdef           sha256      docker hub        alpine          alpine             docker io library alpine latest alpine 3 7        alpine 3 7             docker io library alpine 3 7 alpine  sha256 abcdef           digest    sha256 abcdef      alpine             docker io library alpine sha256 abcdef    docker hub                                                  user1 alpine    user1       alpine              docker io user1 alpine latest user1 alpine 3 7   user1 alpine  sha256 abcdef                     docker io user1 alpine 3 7   docker io user1 alpine  sha256 abcdef          registry            docker hub                            localhost 5000 alpine          registry localhost 5000       alpine                localhost 5000 library alpine latest localhost 5000 user1 alpine sha256 a123def             registry localhost 5000       user1     digest   sha256 a123def   alpine                            digest       image                                               tag                       tag                     docker        digest           digest       manifes     sha256                      layer         layer   sha256        manifest          layer   sha256    manifest   sha256             digest             digest             3  docker pull          Image manifest Image Config   Filesystem Layers               image           image          docker    image     tag    digest   registry              image     tag    digest       image   manifest     manifest     docker docker    manifest        image       digest sha256     sha256     image   ID    ID             ID   image                       registry                  sha256   media type     image       Image Config           diff_ids    diffid      layer tar    sha256 tar      layer                layer         layer         manifest    layer   sha256   media type          layer                             tar    sha256         Image Config    diff_id                      docker                tar                layer           image             Note    layer    config     diffid   layer   tar    sha256   manifest      digest     media type    media type   tar gzip   digest    layer   tar     gzip         sha256    media type    tar    diffid   digest         dockerd   registry           Registry HTTP API V2  4  image            ubuntu   image       docker   image           ubuntu   image id   digest       image            docker images   digests REPOSITORY TAG DIGEST IMAGE ID CREATED SIZE ubuntu latest sha256 e348fbbea0e0a0e73ab0370de151e7800684445c509d46195aef73e090a49bd6 f975c5035748 3 weeks ago 112MB        Note                     registry         digest       manifest   registry     repositories json repositories json         image     repository        name   image id         image   registry    pull                      overlay2   docker                                         btrfs aufs devicemapper     cat  var lib docker image overlay2 repositories json jq      Repositories      ubuntu      ubuntu latest    sha256 f975c50357489439eb9145dbfa16bb7cd06c02c31aa4df45c77de4d2baa4e232    ubuntu sha256 e348fbbea0e0a0e73ab0370de151e7800684445c509d46195aef73e090a49bd6    sha256 f975c50357489439eb9145dbfa16bb7cd06c02c31aa4df45c77de4d2baa4e232               ubuntu  repository                      registry docker hub      repository         image     image ID       ubuntu latest   ubuntu sha256 e348fbb             image sha256 f975c5          image config  docker                   var lib docker                 CentOS            overlay2     CentOS     docker          manifest   registry    config          image overlay2 imagedb content sha256                  sha256     image id    sha256sum  var lib docker image overlay2 imagedb content sha256 f975c50357489439eb9145dbfa16bb7cd06c02c31aa4df45c77de4d2baa4e232 f975c50357489439eb9145dbfa16bb7cd06c02c31aa4df45c77de4d2baa4e232  var lib docker image overlay2 imagedb content sha256 f975c50357489439eb9145dbfa16bb7cd06c02c31aa4df45c77de4d2baa4e232            image   rootfs     diff_ids       ubuntu latest    image     5   layer                 a94e0d        db584c          cat  var lib docker image overlay2 imagedb content sha256 f975c50357489439eb9145dbfa16bb7cd06c02c31aa4df45c77de4d2baa4e232 jq           rootfs      type    layers    diff_ids      sha256 a94e0d5a7c404d0e6fa15d8cd4010e69663bd8813b5117fbad71365a73656df9    sha256 88888b9b1b5b7bce5db41267e669e6da63ee95736cb904485f96f29be648bfda    sha256 52f389ea437ebf419d1c9754d0184b57edb45c951666ee86951d9f6afd26035e    sha256 52a7ea2bb533dc2a91614795760a67fb807561e8a588204c4858a300074c082b    sha256 db584c622b50c3b8f9b8b94c270cc5fe235e5f23",
        "objectID": "posts/how-manage-image",
        "subtitle": "探索 image 的获取和存储方式",
        "date": "2018-04-02T05:12:18.000Z",
        "draft": false,
        "categories": "docker",
        "tags": [
            "docker"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "走进 Descheduler",
        "uri": "posts/introduce-kubernetes-descheduler",
        "content": "kube scheduler   Kubernetes                             Kubernetes                                       Pod                              node       pod                     Pod      kube scheduler                                   Pod                              Pod                              Pod           1  Descheduler       Descheduler     Pod                      Pod           Descheduler     kube scheduler                      Kubernetes                                                   2             Job   CronJob     descheduler            komljen descheduler v0 5 0 4 ga7ceb671        yaml                                           git clone https   github com kubernetes incubator descheduler   cd descheduler    image        push                   chart         Helm     descheduler       RBAC       Kubernetes v1 9             helm           descheduler    helm repo add akomljen charts   https   raw githubusercontent com komljen helm charts master charts    helm install   name ds     namespace kube system   akomljen charts descheduler         helm             serviceaccount   clusterrolebinding  Create cluster role   cat 3     Kubernetes                                 Pod                                   descheduler             Pod                        4       Meet Kubernetes Descheduler  h2  margin bottom 2em  margin right  5px  padding  8px 15px  letter spacing  2px  background image  linear gradient to right bottom  rgb 0  188  212   rgb 63  81  181    background color  rgb 63  81  181   color  rgb 255  255  255   border left  10px solid rgb 51  51  51   border radius 5px  text shadow  rgb 102  102  102  1px 1px 1px  box shadow  rgb 102  102  102  1px 1px 2px     note   font size  1 5rem  font style  italic  padding  0 1rem  margin  2 5rem 0  position  relative  background color   fafeff  border top  1px dotted  9954bb  border bottom  1px dotted  9954bb     note title   padding  0 2rem 0 5rem  background   9954bb  color   FFF  position  absolute  left  0  top  0 25rem  box shadow  0 2px 4px rgba 0 0 0 0 2   border radius  4px   webkit transform  rotate  5deg  translateX  10px  translateY  25px    moz transform  rotate  5deg  translateX  10px  translateY  25px    ms transform  rotate  5deg  translateX  10px  translateY  25px    o transform  rotate  5deg  translateX  10px  translateY  25px   transform  rotate  5deg  translateX  10px  translateY  25px      inline yellow   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   f0ad4e     inline green   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   5cb85c     inline blue   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   2780e3     inline purple   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   9954bb     div border left red   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   df3e3e     div border left yellow   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   f0ad4e     div border left green   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   5cb85c     div border left blue   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   2780e3     div border left purple   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border left width  5px  border radius  3px  border left color   9954bb     div border right red   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   df3e3e     div border right yellow   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   f0ad4e     div border right green   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   5cb85c     div border right blue   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   2780e3     div border right purple   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  border right width  5px  border radius  3px  border right color   9954bb     div border top red   display  block  padding  10px  margin  10px 0  border  1px solid  ccc  ",
        "objectID": "posts/introduce-kubernetes-descheduler",
        "subtitle": "通过 Descheduler 来实现更高级的调度策略",
        "date": "2018-05-23T10:23:29.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Kubernetes 网络扩展",
        "uri": "posts/k8s-network-expand",
        "content": "1  Kubernetes          k8s                hostNetwork hostPort NodePort LoadBalancer Ingress      Pod       Service         Pod    Service   backend  HostNetwork          Pod            Pod     hostNotwork true          pod                pod                                              pod        apiVersion  v1 kind  Pod metadata  name  influxdb spec  hostNetwork  true containers  name  influxdb image  influxdb    Pod                        Pod                  Pod                           Pod                       Pod IP          Pod                                                           hostNetwork  true      hostPort          Pod        hostPort                                      IP       Pod      apiVersion  v1 kind  Pod metadata  name  influxdb spec  containers  name  influxdb image  influxdb ports  containerPort  8086 hostPort  8086       Pod         Pod                                Pod              NodePort NodePort   kubenretes                 Kubernetes    service            ClusterIP          service       ClusterIP    IP                       service     service type     nodePort  apiVersion  v1 kind  Pod metadata  name  influxdb labels  name  influxdb spec  containers  name  influxdb image  influxdb ports  containerPort  8086        service      nodePort       30000 32767      API server            service node port range     kind  Service apiVersion  v1 metadata  name  influxdb spec  type  NodePort ports  port  8086 nodePort  30000 selector  name  influxdb          kubernetes         IP    30000          kube proxy         round robin         service      pod        node                     LoadBalancer LoadBalancer     service                     AWS Azure CloudStack GCE    kind  Service apiVersion  v1 metadata  name  influxdb spec  type  LoadBalancer ports  port  8086 selector  name  influxdb         kubectl svc influxdb NAME CLUSTER IP EXTERNAL IP PORT S  AGE influxdb 10 97 121 42 10 13 242 236 8086 30051 TCP 39s        ClusterIP            19 97 121 42 8086                            IP   30051            EXTERNAL IP          VIP               IP   10 13 242 236 8086               Ingress Ingress    kubernetes1 1                  Ingress controller      Ingress    Ingress controller             Ingress controller      Kubernetes     Docker       Docker         nginx   HAProxy                           Kubernetes       Ingress           nginx   HAProxy                              Ingress controller    Kubernetes           Kubernetes Ingress               HTTP         SSL    SSL    TCP   UDP                Ingress controller                  Ingress controller     apiVersion  extensions v1beta1 kind  Ingress metadata  name  influxdb spec  rules  host  influxdb kube example com http  paths  backend  serviceName  influxdb servicePort  8086      URL http   influxdb kube example com ping            80       Ingress controller            Pod       kube proxy       LoadBalancer           80                                                    IP                                     k8s                         k8s                 dns          k8s dns          2            k8s      172 28 0 0 16 k8s service    10 96 0 0 12       192 168 0 0 16 k8s        kubectl cs NAME STATUS MESSAGE ERROR scheduler Healthy ok controller manager Healthy ok etcd 0 Healthy   health    true     kubectl nodes  owide NAME STATUS AGE VERSION EXTERNAL IP OS IMAGE KERNEL VERSION node1 Ready 13d v1 7 11 CentOS Linux 7  Core  3 10 0 514 el7 x86_64 node2 Ready 13d v1 7 11 CentOS Linux 7  Core  3 10 0 514 el7 x86_64 node3 Ready 13d v1 7 11 CentOS Linux 7  Core  3 10 0 514 el7 x86_64                IP                                                  192 168 2 173   calico gateway        dns         192 168 1 62   node3           k8s    dao 2048       kubectl svc egrep  NAME 2048  NAME CLUSTER IP EXTERNAL IP PORT S  AGE dao 2048 10 98 217 155 80 TCP 13m                                       192 168 0 0 16             tcp      k8s service                                                                          dao 2048 default svc cluster local       k8s                                                                                     dns     ingress udp pod         udp53        192 168 1 62              k8s dns     dns                              dns   192 168 1 62                                                   10 98 217 155        svc     clusterip                                                                k8s            net ipv4 ip_forward 1                         k8s    10 96 0 0 12          192 168 2 173   192 168 2 173     ip route add 10 96 0 0 12 via 192 168 2 173              kube proxy             svc           kubele       k8s                                                        calico Iface                                                         k8s                 k8s                                     3       dns          dns             dns      hostNetwork  true    k8s             dns      cd   dns udp  ll    total 20K  rw r  r    1 root root 1 2K Feb 12 05 13 default backend yaml  rw r  r    1 root root 140 Feb",
        "objectID": "posts/k8s-network-expand",
        "subtitle": "通过边界网关和边界 DNS 直接访问 k8s 中的服务",
        "date": "2018-02-11T10:40:33.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes",
            "docker"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Kube-router 实战",
        "uri": "posts/kube-router",
        "content": "Kube router                calico   kube proxy         Kubernetes                              1       Kube router                               Kubernetes watch API              Kubernetes                        API             API                                            Kube router  3                           Kube router           wathcer  func  kr  KubeRouter  Run   error       err   kr startApiWatchers     startApiWatchers       endpoint namespace pod node networkpolicy service     wather      wathcer           Broadcaster  func NewBroadcaster    Broadcaster   return  Broadcaster     func  b  Broadcaster  Add listener Listener    b listenerLock Lock   defer b listenerLock Unlock   b listeners   append b listeners  listener    func  b  Broadcaster  Notify instance interface      b listenerLock RLock   listeners    b listeners b listenerLock RUnlock   _  listener    range listeners   go listener OnUpdate instance             controller NetworkPolicyController NetworkRoutingController NetworkServicesControllers     controller               func NewNetworkServicesController clientset  kubernetes Clientset   config options KubeRouterConfig   NetworkServicesController  error        nsc    NetworkServicesController       watchers EndpointsWatcher RegisterHandler  nsc  watchers ServiceWatcher RegisterHandler  nsc         controller         func Run       Sync      control loop runs ever perfom sync periodic interval     func OnUpdate     Sync      receiving update watched API object  namespace  node  pod  network policy etc    Sync       re concile state changes   Cleanup        cleanup changes  to iptables  ipvs  network etc  done system   2          IPVS LVS            run service proxy Kube router    Linux     IPVS     K8s    Service      Kube router                        kube dummy if         k8s   watch APi      svc   ep     svc   cluster_ip      kube dummy if        lvs   virtual server     realserver   ip     ep       IP       Kubernetes         Kube router IPVS                    IP                           run router     kube router       IP         masquerade all          SNAT            Kubernetes network services prox IPVS LVS Kernel Load Balancing Docker Containers Using IPVS LVS                      run router Kube router    BGP     Go   GoBGP                        Kubernetes API                kube router                         kube router       CNI               bridge        kube rouetr           BGP     Kubernetes           Kubernetes pod networking beyond BGP            run firewall            Kubernetes API                 pod           ipset    iptables    pod                             Kube router    networking k8s io NetworkPolicy         V1 GA semantics         beta          kube router             Enforcing Kubernetes network policies iptables 3     kube router    kube proxy                 kube router   service proxy             calico                   v           k8s    kube router      apiserver        daemonset    kube router    kube apiserver   kubelet      allow privileged true                  IP                                        k8s master   192 168 123 250   node1     k8s node   192 168 123 248   node2     k8s node   192 168 123 249   node3                kube proxy       kube proxy           iptables       systemctl stop kube proxy   kube proxy   cleanup iptables      daemonset    kube router        DR       kubectl   namespace kube system create configmap kube proxy   from file kubeconfig conf  root  kube config   wget https   raw githubusercontent com cloudnativelabs kube router master daemonset kubeadm kuberouter all features dsr yaml   kubeadm kuberouter all features dsr yaml      run router       run firewall        false   kubectl create  f kubeadm kuberouter all features dsr yaml          lvs      ipvsadm  Ln IP Virtual Server version 1 2 1  size 4096  Prot LocalAddress Port Scheduler Flags    RemoteAddress Port Forward Weight ActiveConn InActConn TCP 10 254 0 1 443 rr persistent 10800    192 168 123 250 6443 Masq 1 0 0   ipvsadm  S  n  A  t 10 254 0 1 443  s rr  p 10800  a  t 10 254 0 1 443  r 192 168 123 250 6443  m  w 1      kube router      lvs   nat              kube router   kubectl run whats my ip   image cloudnativelabs whats my ip   replicas 3        kubectl expose deploy whats my ip   target port 8080   port 8080            kubectl pods  owide NAME READY STATUS RESTARTS AGE IP NODE whats my ip 845d4ff4f6 d2ptz 1 1 Running 0 23h 172 20 135 8 192 168 123 249 whats my ip 845d4ff4f6 jxzzn 1 1 Running 0 23h 172 20 166 130 192 168 123 250 whats my ip 845d4ff4f6 szhhd 1 1 Running 0 34s 172 20 104 9 192 168 123 248   kubectl svc NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE kubernetes ClusterIP 10 254 0 1 443 TCP 45d whats my ip ClusterIP 10 254 108 117 8080 TCP 16s    lvs        ipvsadm  Ln IP Virtual Server version 1 2 1  size 4096  Prot LocalAddress Port Scheduler Flags    RemoteAddress Port Forward Weight ActiveConn InActConn TCP 10 254 0 1 443 rr persistent 10800    192 168 123 250 6443 Masq 1 0 0 TCP 10 254 175 147 8080 rr    172 20 104 9 8080 Masq 1 0 0    172 20 1",
        "objectID": "posts/kube-router",
        "subtitle": "使用 Kube-router 作为 Kubernetes 负载均衡器",
        "date": "2018-04-20T04:36:40.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes",
            "lvs"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Kubernetes 的奇技淫巧",
        "uri": "posts/kubernetes-fucking-trick",
        "content": "Kubernetes                            User             Kubernetes                    Kubernetes                       Kubernetes                                     Kubernetes                  Kubernetes                                                        Kubernetes                Kubernetes                        kubectl      kubectl                                                             kubectl                         bash           shell      bash Linux                   echo  source      bashrc   source    bashrc                   bash completion         zsh           shell   zsh                 echo  source      zshrc   source    zshrc     kubectl    kubectl            kubectl               o json     o yaml                                                      go template        go template   golang            template                   pods      pod   uid              kubectl pods   all namespaces  o go template    range  items     metadata uid     end    2ea418d4 533e 11e8 b722 005056a1bc83 7178b8bf 4e93 11e8 8175 005056a1bc83 a0341475 5338 11e8 b722 005056a1bc83       kubectl pods  o yaml apiVersion  v1 items  apiVersion  v1 kind  Pod metadata  name  nginx deployment 1751389443 26gbm namespace  default uid  a911e34b f445 11e7 9cda 40f2e9b98448     apiVersion  v1 kind  Pod metadata  name  nginx deployment 1751389443 rsbkc namespace  default uid  a911d2d2 f445 11e7 9cda 40f2e9b98448     apiVersion  v1 kind  Pod metadata  name  nginx deployment 1751389443 sdbkx namespace  default uid  a911da1a f445 11e7 9cda 40f2e9b98448     kind  List metadata     resourceVersion        pods        List        pods    items     value          items        range  items                      items         metadata uid                            end                                             printf           n               kubectl pods   all namespaces  o go template   template    range  items    printf   s n   metadata uid    end              kubectl pods   all namespaces  o go template   template    range  items     metadata uid      n     end         printf                                       kubectl pods   all namespaces  o go template   template    range  items    printf     20s   50s   30s  n   metadata namespace  metadata name  metadata uid    end     default  details v1 64b86cd49 85vks  2e7a2a66 533e 11e8 b722 005056a1bc83   default  productpage v1 84f77f8747 7tkwb  2eb4e840 533e 11e8 b722 005056a1bc83   default  ratings v1 5f46655b57 qlrxp  2e89f981 533e 11e8 b722 005056a1bc83            go template          range                   kubectl pods   all namespaces  o go template   template    range  items    range  spec containers    printf   s n   image    end    end    istio examples bookinfo details v1 1 5 0 istio examples bookinfo productpage v1 1 5 0 istio examples bookinfo ratings v1 1 5 0                          IP   kubectl no  o go template    range  items    if  spec unschedulable     metadata name      spec externalID      n     end    end         go template                            kubectl  n kube system pods coredns 64b597b598 7547d  o custom columns NAME  metadata name hostip  status hostIP NAME hostip coredns 64b597b598 7547d 192 168 123 250       go template file                                     template            cat   test tmpl Kube prompt     Kubernetes     Kube prompt       Kubernetes                                            kubectl             Kubectl Aliases    kubectl               kubectl   kubernetes api                           kubectl aliases             kubectl                       kd   kubectl describe          kgdepallw   kubectl deployment   all namespaces   watch Kubeval               Kubernetes manifest       manifest                          Kubernetes                         Kubeval        Kubernetes YAML JSON            Kubernetes                         kubeval nginx yaml document nginx yaml contains invalid Deployment      spec replicas  Invalid type  Expected  integer  given  string Kedge    Kubernetes             Kubernetes manifest                                                 Kedge                 kedge       Kubernetes manifest          Web server Kedge example name  httpd deployments  containers  image  centos httpd services  name  httpd type  LoadBalancer portMappings  8080 80 Converted Kubernetes artifact file s  apiVersion  v1 kind  Service metadata  creationTimestamp  null labels  app  httpd name  httpd spec  ports  name  httpd 8080 port  8080 protocol  TCP targetPort  80 selector  app  httpd type  LoadBalancer status  loadBalancer     apiVersion  extensions v1beta1 kind  Deployment metadata  creationTimestamp  null labels  app  httpd name  httpd spec  strategy     template  metadata  creationTimestamp  null labels  app  httpd name  httpd spec  containers  image  centos httpd name  httpd resources     status            Ops   SRE       10     k8s         Kubernetes          h3     h3         display inline block  font weight normal  background   00ACC1  color  ffffff  padding 3px 10px 0px  border top right radius  3px  border top left radius  4px  margin left 5p",
        "objectID": "posts/kubernetes-fucking-trick",
        "subtitle": "打造高效的命令行终端",
        "date": "2018-06-11T04:35:48.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/kubernetes4.png"
            }
        ]
    },
    {
        "title": "LVS负载均衡之持久性连接介绍",
        "uri": "posts/lvs-persistent-connection",
        "content": "1                              lvs            session                      session                                 lvs                       Web                  A      B           B                                                              cookie session                     session           cookie     session                         cookie          session                                                                                A B             LVS                                             LVS                                                session                                          LVS                                                  session       LVS                 IP Port                       session                       A              B      B      A       session                                                                                                  session                           session         session        session                 session                                                            session                    hash        LVS           Source Hashing     hash                  IP           Server       session                 Source Hashing                                   IP                        RS                                                       RS                                              TCP              hash            real server          rr                                                            IP              RS                      director      LVS                            RS                                                 300      300                                           2                        RS                              RS                     SH      lvs                   RS                          2  lvs            1      client          lvs   hash           persistence_timeout          persistencegranularity       persistencetimeout                                    255 255 255 255        client ip      255 255 255 0   client ip                  real server  2                      3   tcp  tcp        tcpfin  lvs     tcp fin      udp  udp      3  lvs             ipvsadm  Ln      persistence_timeout             360s    ipvsadm  Ln IP Virtual Server version 1 2 1  size 4096  Prot LocalAddress Port Scheduler Flags    RemoteAddress Port Forward Weight ActiveConn InActConn TCP 10 254 66 97 8080 rr persistent 10800    172 20 104 7 8080 Masq 1 0 0    172 20 135 6 8080 Masq 1 0 0    172 20 135 7 8080 Masq 1 0 0    ipvsadm  Ln   timeout      tcp tcpfin udp           900 120 300    ipvsadm  Ln   timeout Timeout  tcp tcpfin udp   900 120 300 4  lvs                ipvsadm  Lnc IPVS connection entries pro expire state source virtual destination TCP 01 54 TIME_WAIT 192 168 123 248 35672 10 254 66 97 8080 172 20 135 6 8080 TCP 180 03 NONE 192 168 123 248 0 10 254 66 97 8080 172 20 135 6 8080     client    vip        ipvs           NONE           expire      persistence_timeout                            client ip                   TIMEWAIT      tcp tcpfin udp    tcpfin         NONE    0     TIMEWAIT        NONE         persistencetimeout           TIMEWAIT      NONE         NONE       client             real server  5  lvs             persistence_timeout      ipvsadm  p timeout        360      ipvsadm  A  t 192 168 20 154 80  s rr  p 60            80                     80             real server     80      0                            real server  tcp tcpfin udp      ipvsadm   set               ipvsadm   set tcp tcpfin udp Note tcpfin        persistence_timeout                  tcpfin    6                                LVS                                  RS         LVS        Director                                                 Real Server    Note                      RS               1            PPC Persistent Port Connections                                     RS    client     LVS 80      RS1   client     LVS 23      RS2                  RS               ipvsadm  A  t 172 16 100 1 80  s rr  p 3600   ipvsadm  a  t 172 16 100 1 80  r 172 16 100 10  g  w 2   ipvsadm  a  t 172 16 100 1 80  r 172 16 100 11  g  w 2 2            PCC Persistent Client Connections                                RS    PCC                     0     p                          Real Server             ipvsadm  A  t 172 16 100 1 0  s rr  p 3600   ipvsadm  a  t 172 16 100 1 0  r 172 16 100 10  g  w 2   ipvsadm  a  t 172 16 100 1 0  r 172 16 100 11  g  w 2 3                     PNMPP Persistent Netfilter Marked Packet Persistence       real server      80   443                          PNMPC                                      Real Server        Real Server                                                                           Real Server                         HTTP 80   HTTPS 443                   Real Server                     iptables  t mangle  A PREROUTING  d 172 16 100 1  i eth0  p tcp   dport 80  j MARK   set mark 8   iptables  t mangle  A PREROUTING  d 172 16 100 1  i eth0  p tcp   dport 443  j MARK   set mark 8   ipvsadm  A  f 8  s rr  p 600   ipvsadm  ",
        "objectID": "posts/lvs-persistent-connection",
        "subtitle": "如何根据业务场景来设置 lvs 持久性",
        "date": "2018-04-18T11:18:06.000Z",
        "draft": false,
        "categories": "loadbalance",
        "tags": [
            "lvs"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Pod 的生命周期管理",
        "uri": "posts/pods-life",
        "content": "pod                                         1  Pod       Pod phase Pod   status        PodStatus           phase     Pod     phase   Pod                           Pod                     Pod                                    Pod      phase             Pod      deployment daemonset   statefulset    Pod   phase                Pending  Pod    Kubernetes                                Pod                                Running    Pod             Pod                                          Successed  Pod                          Failed  Pod                                       0                Unkonwn             Pod            Pod               Pod                  Pod             Pod         Pod    Pod     PodStatus           PodCondition     PodCondition             type       status    type              PodScheduled Ready Initialized   Unschedulable status                True False   Unknown       kubectl pod    Pod   STATUS            5           Init 0 1   CrashLoopBackOff      Pod           phase       InitContainerStatuses   containerStatuses              overall status pod                       kubectl describe pod  PODNAME         Events       Events                          Pod            container    unhealthy     2  Pod                          Pod                             manifest       deployment  kind  Deployment apiVersion  apps v1beta1 metadata  name  loap spec  replicas  1 template  metadata  labels  app  loap spec  initContainers  name  init image  busybox command    sh     c    echo   date   s   INIT     loap timing   volumeMounts  mountPath   loap name  timing containers  name  main image  busybox command    sh     c    echo   date   s   START     loap timing  sleep 10  echo   date   s   END     loap timing    volumeMounts  mountPath   loap name  timing livenessProbe  exec  command    sh     c    echo   date   s   LIVENESS     loap timing   readinessProbe  exec  command    sh     c    echo   date   s   READINESS     loap timing   lifecycle  postStart  exec  command    sh     c    echo   date   s   POST START     loap timing   preStop  exec  command    sh     c    echo   date   s   PRE HOOK     loap timing   volumes  name  timing hostPath  path   tmp loap    Pod      Running                Pod    kubectl scale deployment loap   replicas 0     tmp loap timing          cat  tmp loap timing 1525334577  INIT 1525334581  START 1525334581  POST START 1525334584  READINESS 1525334584  LIVENESS 1525334588  PRE HOOK 1525334589  END  tmp loap timing             Pod                       Pod                 Infra       Pause         Pod          linux          init                     Init                                Pod                                    4             post start hook       7         liveness   readiness     11            Pod pre stop hook                  30                 Pod               Pod      Note        Pod      pre stop hook     Pod    Down         pre stop hook  3       DEBUG   Pod                 DEBUG                                      spec terminationMessagePath                                             dashboards                     dev termination log            termination demo yaml apiVersion  v1 kind  Pod metadata  name  termination demo spec  containers  name  termination demo container image  alpine command     bin sh   args     c    sleep 10    echo Sleep expired    dev termination log                             kubectl create  f termination demo yaml   sleep 20   kubectl pod termination demo  o go template    range  status containerStatuses     lastState terminated message    end    Sleep expired   kubectl pod termination demo  o go template    range  status containerStatuses     lastState terminated exitCode    end    0 4     Pod hook Kubernetes  Pod s Life    Pod        h2  margin bottom 2em  margin right  5px  padding  8px 15px  letter spacing  2px  background image  linear gradient to right bottom  rgb 0  188  212   rgb 63  81  181    background color  rgb 63  81  181   color  rgb 255  255  255   border left  10px solid rgb 51  51  51   border radius 5px  text shadow  rgb 102  102  102  1px 1px 1px  box shadow  rgb 102  102  102  1px 1px 2px     note   font size  1 5rem  font style  italic  padding  0 1rem  margin  2 5rem 0  position  relative  background color   fafeff  border top  1px dotted  9954bb  border bottom  1px dotted  9954bb     note title   padding  0 2rem 0 5rem  background   9954bb  color   FFF  position  absolute  left  0  top  0 25rem  box shadow  0 2px 4px rgba 0 0 0 0 2   border radius  4px   webkit transform  rotate  5deg  translateX  10px  translateY  25px    moz transform  rotate  5deg  translateX  10px  translateY  25px    ms transform  rotate  5deg  translateX  10px  translateY  25px    o transform  rotate  5deg  translateX  10px  translateY  25px   transform  rotate  5deg  translateX  10px  translateY  25px      inline yellow   display inline  padding  2em  6em  3em  font size 80   font weight bold  line height 1  color  fff  text align center  white space nowrap  vertical align baseline  border radius 0  background color   f0ad4e     inl",
        "objectID": "posts/pods-life",
        "subtitle": "探究 Pod 的启动关闭流程以及快速 DEBUG",
        "date": "2018-05-03T12:08:01.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Python3 系列之迭代器 & 生成器",
        "uri": "posts/python3-iterator-and-generator",
        "content": "1                                                                                                                                                                                                     G                              next                                                                                  names   iter   alex    jack    list        print names                     names 1  Traceback  most recent call last   File     line 1  names 1  TypeError   list_iterator  object not subscriptable                print names next    alex     print names next    jack     print names next    list                          print names next    Traceback  most recent call last   File     line 1  print names next    StopIteration 2                                 generator          yield                  yield                                                          yield                          def cash_money amount   amount   0  amount    100 yield 100 print                             atm   cash_money 500      print atm                                                 type atm                                                                          print atm next    100     print atm next           100     print atm next           100     print atm next           Traceback  most recent call last   File     line 1  print atm next    StopIteration                                                                                                     10                                                      5                                                                                                                                                                                                                                                                            atm   cash_money 500      print atm next    100     print atm next           100                                                                                    print                                    print atm next           100                                                                                                                                                                  yield                cat yield   py    usr bin env python encoding  utf 8 import time def consumer name   print            format name   True  baozi   yield print     0      1      format baozi  name   def producer name   c   consumer  A   c2   consumer  B   c next   c2 next   print                range 3   time sleep 1  print            c send i  c2 send i  producer  alex     python3 yield   py A       B                             0    A      0    B              1    A      1    B              2    A      2    B                           send       yield                yield                                                    generator             next                 next                  yield                     generator               yield       return            yield    yield                         yield                yield   return",
        "objectID": "posts/python3-iterator-and-generator",
        "subtitle": "使用迭代器和生成器实现单线程异步并发",
        "date": "2017-07-27T18:38:59.000Z",
        "draft": false,
        "categories": "python",
        "tags": [
            "python"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Python3 系列之文件读写",
        "uri": "posts/python3系列之文件读写",
        "content": "1                os 1 1                          import os     os getcwd     tmp      os chdir   home yang test       os getcwd     home yang test                Pyhton             os chdir   user bin   Traceback  most recent call last   File     line 1  FileNotFoundError   Errno 2  No file directory    user bin  1 2            os makedirs   tmp test                   os makedirs                  1 3             os path abspath path                    os path abspath        tmp      os path abspath    test     tmp test  os path isabs path                 True                False     os path isabs      False     os path isabs os path abspath       True os path relpath path  start      start     path                  start                      os path relpath   home yang     tmp       home yang  os path dirname path             path                  os path basename path             path                      path     usr bin vlc      os path basename path   vlc      os path dirname path    usr bin  os path split                                  path     usr bin vlc      os path split path     usr bin    vlc   os path split                                      split        os path sep                   path split os path sep        usr    bin    vlc   1 4              os path getsize path    path           os listdir path                path              os path getsize   usr bin vlc   14712     os listdir   etc     ld so conf d    skel    profile d    fstab    shells    rpc    nscd conf    gai conf    locale gen    ssl    dbus 1    ethertypes    iptables     snip    logrotate conf    man_db conf    pacman conf    wgetrc    cpufreq bench conf    papersize    nanorc    ld so cache                               os path getsize     os listdir        totalSize   0     filename os listdir   etc    totalSize   totalSize   os path getsize os path join   etc   filename       print totalSize  846656 1 5         os path exists path    path                 True     False  os path isfile path    path                True     False  os path isdir path    path                 True     False      os path exists   tmp   True     os path exists   user bin   False     os path isdir   tmp   True     os path isfile   tmp   False     os path isdir   usr bin vlc   False     os path isfile   usr bin vlc   True 2           Python        3     1    open           File     2    File     read     write       3    File     close             2 1          f   open  test txt   w       f write  Hello world                                               f close                           f flush   2 2          r                f   open  test txt                 f read         f readline                                                                                                f tell                  f seek 0  2 3              open  user_info txt       line a readlines                  print line       a close   readlines                                               xreadlines  2 4        F   open  test txt   a       F write  append end       f close   2 5   pprint pformat          pprint pformat                                                   Pthon    pprint pformat                      py                                            import pprint     cats      name    Zophie    desc    chubby      name    Pooka    desc    fluffy        pprint pformat cats      desc    chubby    name    Zophie      desc    fluffy    name    Pooka         file   open  myCats py    w       file write  cats       pprint pformat cats      n   83     file close   import             Python         pprint pformat             py                               import myCats     myCats cats    desc    chubby    name    Zophie      desc    fluffy    name    Pooka        myCats cats 0    desc    chubby    name    Zophie       myCats cats0  Zophie    shelf        shelve      key value               Python            pickle                                          shelve                      Python                                                 import shelve     shelfFile   shelve open  mydata       cats     Zophie    Pooka    Simon       shelfFile  cats     cats     shelfFile close   shelf                                    shelfFile   shelve open  mydata       type shelfFile      shelfFile  cats     Zophie    Pooka    Simon       shelfFile close         shelf    keys     values         shelf                                                list                   shelfFile   shelve open  mydata       list shelfFile keys      cats       list shelfFile values       Zophie    Pooka    Simon        shelfFile close                                             Python             shelve    3                   mcb py                            python mcb py spam                                      python mcb py list                                                       save                        list                                                      sys argv                       shelve              Archlinux       pacman  S python pyperclip                   pacman  S xsel   pacman  S xclip ",
        "objectID": "posts/python3系列之文件读写",
        "subtitle": "通过 Python3 读写文件",
        "date": "2017-01-03T08:51:06.000Z",
        "draft": false,
        "categories": "python",
        "tags": [
            "python"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Device Mapper系列 (2)：Thin Provisioning 实践",
        "uri": "posts/thin-provisioning",
        "content": "1  Thin Provisioning Snapshot             Device Mapper                                 Device Mapper   Thin Provisioning Snapshot                           data img    meta data img    dd if  dev zero of  tmp data img bs 1K count 1 seek 10M 1 0 records 1 0 records 1024 bytes  1 0 kB  copied  0 000621428 s  1 6 MB s   dd if  dev zero of  tmp meta data img bs 1K count 1 seek 1G 1 0 records 1 0 records 1024 bytes  1 0 kB  copied  0 000140858 s  7 3 MB s       seek                       10G   output   bloksize               bs   1           10G                            1k                                    ls             12K   4K    ls  lsh  tmp data img 12K  rw r  r    1 root root 11G Aug 25 23 01  tmp data img   ls  slh  tmp meta data img 4 0K  rw r  r    1 root root 101M Aug 25 23 17  tmp meta data img                  loopback     loop2015   loop2016              losetup  dev loop2015  tmp data img   losetup  dev loop2016  tmp meta data img   losetup  a  dev loop2015   64768  103991768   tmp data img   dev loop2016   64768  103991765   tmp meta data img                  Thin Provisioning   Pool   dmsetup       dmsetup create hchen thin pool     table  0 20971522 thin pool  dev loop2016  dev loop2015   128 65536 1 skipblockzeroing                    Thin Provisioning   man page   dmsetup create       thin pool     hchen thin pool         pool            table     pool       0      sector    20971522       sector           sector   512       20971522      10GB  dev loop2016   meta                 dev loop2015   data       128          sector   65536       sector   water mark       threshold 1           skipblockzeroing              0                     Device Mapper         ll  dev mapper hchen thin pool lrwxrwxrwx  1 root root 7 Aug 25 23 24  dev mapper hchen thin pool       dm 4                         Thin Provisioning   Volume    dmsetup message  dev mapper hchen thin pool 0  create_thin 0    dmsetup create hchen thin volumn 001     table  0 2097152 thin  dev mapper hchen thin pool 0              create_thin          0      Volume   device   id                Volumn        mount         hchen thin volumn 001 2097152    1GB         mount                mkfs ext4  dev mapper hchen thin volumn 001 mke2fs 1 42 9  28 Dec 2013  Discarding device blocks  done Filesystem label  OS type  Linux Block size 4096  log 2  Fragment size 4096  log 2  Stride 16 blocks  Stripe width 16 blocks 65536 inodes  262144 blocks 13107 blocks  5 00   reserved super user First data block 0 Maximum filesystem blocks 268435456 8 block groups 32768 blocks per group  32768 fragments per group 8192 inodes per group Superblock backups stored blocks  32768  98304  163840  229376 Allocating group tables  done Writing inode tables  done Creating journal  8192 blocks   done Writing superblocks filesystem accounting information  done           mount                       mkdir  p  mnt base   mount  dev mapper hchen thin volumn 001  mnt base   echo  hello world  base     mnt base id txt   cat  mnt base id txt hello world  base                snapshot        dmsetup message  dev mapper hchen thin pool 0  create_snap 1 0    dmsetup create mysnap1     table  0 2097152 thin  dev mapper hchen thin pool 1    ll  dev mapper mysnap1 lrwxrwxrwx  1 root root 7 Aug 25 23 49  dev mapper mysnap1       dm 5                 hchen thin pool     create_snap           id        dev id             dev id    snapshot 0    dev id                        mysnap1   device      mount               mkdir  p  mnt mysnap1   mount  dev mapper mysnap1  mnt mysnap1   ll  mnt mysnap1  total 20  rw r  r    1 root root 25 Aug 25 23 46 id txt drwx        2 root root 16384 Aug 25 23 43 lost found   cat  mnt mysnap1 id txt hello world  base            mnt mysnap1 id txt       snap1 txt        echo  I snap1      mnt mysnap1 id txt   echo  I snap1     mnt mysnap1 snap1 txt   cat  mnt mysnap1 id txt hello world  base snap1   cat  mnt mysnap1 snap1 txt snap1           mnt base               ls  mnt base id txt lost found   cat  mnt base id txt hello world  base                     2  Docker   devicemapper           Docker              docker   loopback       losetup  a  dev loop0   64768  38050288   var lib docker devicemapper devicemapper data   dev loop1   64768  38050289   var lib docker devicemapper devicemapper metadata       data 100GB metadata 2 0GB   ls  alsh  var lib docker devicemapper devicemapper 506M  rw         1 root root 100G Sep 10 20 15 data 1 1M  rw         1 root root 2 0G Sep 10 20 15 metadata          thin pool           hash    device             ll  dev mapper dock  lrwxrwxrwx  1 root root 7 Aug 25 07 57  dev mapper docker 253 0 104108535 pool       dm 2 lrwxrwxrwx  1 root root 7 Aug 25 11 13  dev mapper docker 253 0 104108535 deefcd630a60aa5ad3e69249f58a68e717324be4258296653406ff062f605edf       dm 3             device id Docker              cat  var lib docker devicemapper metadata deefcd630a60aa5ad3e69249f58a68e717324be4258296653406ff062f605edf device_id   24 size   10737418240    512    20971520   sector               snapshot                dev id   1024     dmsetup mess",
        "objectID": "posts/thin-provisioning",
        "subtitle": "Thin Provisioning Snapshot 演练",
        "date": "2018-01-22T08:00:22.000Z",
        "draft": false,
        "categories": "docker",
        "tags": [
            "docker"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "Device Mapper系列 (3)：Docker 中使用 devicemapper 存储驱动",
        "uri": "posts/use-devicemapper",
        "content": "1       devicemapper       RHEL  CentOS   Oracle Linux           Docker EE   Commercially Supported Docker Engine  CS Engine             Product compatibility matrix  devicemapper   CentOS  Fedora  Ubuntu   Debian      Docker CE         Docker                              2    Docker  devicemapper Docker      devicemapper                loop lvm                                               out of the box             loop lvm       2 1       direct lvm   CentOS7   Docker 17 06        Docker      direct lvm                       lvm                           direct lvm                                   direct lvm               usr lib docker storage setup docker storage setup                      man docker storage setup                                                                                   dm directlvmdevice        direct lvm                 dm directlvmdevice   dev xvdf      dm thinppercent        data thin pool           95   dm thinppercent 95     dm thinpmetapercent        metadata thin pool           1   dm thinpmetapercent 1     dm thinpautoextendthreshold              100    disable     50    lvmthin   LVM thin provisioning       80   dm thinpautoextendthreshold 80     dm thinpautoextendpercent             100    disable       20   dm thinpautoextendpercent 20     dm directlvmdeviceforce                                false   dm directlvmdeviceforce true       etc docker daemon json            Docker                   storage driver    devicemapper    storage opts      dm directlvm_device  dev xdf    dm thinp_percent 95    dm thinp_metapercent 1    dm thinpautoextendthreshold 80    dm thinpautoextendpercent 20    dm directlvmdeviceforce false                    Stable Edge      direct lvm                                     dev xvdf                   Docker daemon      1         Docker       Docker daemon  2   LVM2    LVM2      Linux              RHEL   CentOS  device mapper persistent data  lvm2        Ubuntu   Debian  thin provisioning tools  lvm2        3          pvcreate  dev xvdf Physical volume   dev xvdf  successfully created  4       docker        vgcreate docker  dev xvdf Volume group  docker  successfully created 5       thinpool                    docker        95                            lvcreate   wipesignatures y  n thinpool docker  l 95 VG Logical volume  thinpool  created    lvcreate   wipesignatures y  n thinpoolmeta docker  l 1 VG Logical volume  thinpoolmeta  created  6         thinpool       lvconvert  y     zero n    c 512K     thinpool docker thinpool     poolmetadata docker thinpoolmeta WARNING  Converting logical volume docker thinpool docker thinpoolmeta thin pool s data metadata volumes metadata wiping  WILL DESTROY CONTENT LOGICAL VOLUME  filesystem etc   Converted docker thinpool thin pool  7    lvm profile               vi  etc lvm profile docker thinpool profile 8      thinpoolautoextendthreshold   thinpoolautoextendpercent          thinpoolautoextend_threshold                         100   disabled   thinpoolautoextend_threshold   80                           100      thinpoolautoextend_percent   20      docker thinpool profile           etc lvm profile docker thinpool profile         activation   thinpoolautoextend_threshold 80 thinpoolautoextend_percent 20   9      lvm       lvchange   metadataprofile docker thinpool docker thinpool Logical volume docker thinpool changed  10           lv          lvs  o seg_monitor LV VG Attr LSize Pool Origin Data  Meta  Move Log Cpy Sync Convert Monitor thinpool docker twi a t    95 00g 0 00 0 01 monitored 11    Docker       mkdir  var lib docker bk   mv  var lib docker    var lib docker bk 12         devicemapper       cat  etc docker daemon json    storage driver    devicemapper    storage opts      dm thinpooldev  dev mapper docker thinpool    dm usedeferredremoval true    dm usedeferreddeletion true             Note  Always set dm usedeferredremoval true dm usedeferreddeletion true prevent unintentionally leaking mount points      2                            devicemapper          lsblk                       lsblk NAME MAJ MIN RM SIZE RO TYPE MOUNTPOINT xvda 202 0 0 8G 0 disk   xvda1 202 1 0 8G 0 part   xvdf 202 80 0 10G 0 disk   vg  docker data 253 0 0 90G 0 lvm     docker 202 1 1032 pool 253 2 0 10G 0 dm   vg  docker metadata 253 1 0 4G 0 lvm   docker 202 1 1032 pool 253 2 0 10G 0 dm       lsblk                         Docker 202 1 1032 pool   pool     data   metadata      pool           Docker            inode  pool 3     devicemapper 3 1    thin pool        lvm             Volume Group            volume                lvs   lvs  a     volume               nagios                    lvm       thin pool                  journalctl  fu dm event service           thin pool                  etc docker daemon json       dm minfreespace                   10               10                 storage driver options Engine daemon reference  3 2                 lv            vg                   thin pool                        loop lvm         direct lvm         loop lvm           loop lvm              device_tool                     a     ",
        "objectID": "posts/use-devicemapper",
        "subtitle": "配置 Docker 使用 devicemapper",
        "date": "2018-01-22T08:17:11.000Z",
        "draft": false,
        "categories": "docker",
        "tags": [
            "docker"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "kubectl run 背后到底发生了什么？",
        "uri": "posts/what-happens-when-k8s",
        "content": "nginx     Kubernetes                         kubectl run   image nginx   replicas 3                   nginx pod                                               Kubernetes                    API           deployments                                                             client   Kubelet                                                                        1  kubectl                 kubectl                                                                kube apiserver                            kubectl        kube apiserver   HTTP        kube apiserver   etcd                Kubernetes             kube apiserver    kubectl      kubectl       generators     HTTP                           kubectl run        deployment             generator                      generator      kubectl                        restart policy Always          Deployment         restart policy Never          Pod    kubectl                                     kubectl          Deployment        DeploymentV1Beta1                        API       API                        Kubernetes      API              API         api v1     apis extensions v1beta1     API                            Kubernetes API     API                   Kubernetes API       API      REST            apiVersion          Deployment   API     apps     API     v1beta2           Deployment manifests      apiVersion  apps v1beta2  kubectl                     API    API                              REST               kubectl     remote API     apis            API      kube apiserver    apis        OpenAPI                        API         kubectl   OpenAPI           kube cache           API                    kubectl       v                           API    HTTP       kubectl                  HTTP                    kubectl               success message              HTTP                                              kubectl                   kubeconfig     kubectl           kubeconfig             kubeconfig     kubectl       kubeconfig       kubeconfig              kubeconfig              KUBECONFIG             kubeconfig          kubeconfig          KUBECONFIG       kubectl        kubeconfig     HOME  kube config      kubeconfig     kubectl                                                        username              kubeconfig                   kubectl                 HTTP       x509      tls TLSConfig       CA      bearer tokens   HTTP     Authorization               HTTP         OpenID                       bearer token        token  2  kube apiserver                                   kube apiserver       kube apiserver                                     kube apiserver                             apiserver              kube apiserver                    CLI                                client ca file        x509                         token auth file        breaer token                   apiserver                          x509         HTTP        CA        TLS          bearer token           token auth file       token                    HTTP                                                         Authorization                                                         OK             kube apiserver                                                                                kube apiserver            kube apiserver                        kube apiserver         authorization_mode                                                                                            kube apiserver               webhook         HTTP S        ABAC                 RBAC      rbac authorization k8s io API Group               Kubernetes API         Node      kubelet                                                      API Server                   kube apiserver                                       Kubernetes                                         Admission Controller                                                                                                            etcd                                                                                                         Note                                                                                                                                plugin pkg admission                        kube apiserver                                 SecurityContextDeny ResourceQuota   LimitRanger           SecurityContextDeny             Security Context   Pod  ResourceQuota         Namespace                  Namespace    Pod                      ResourceQuota              LimitRanger          ResourceQuota        Namespace         Pod   Container                  LimitRange             3  etcd       Kubernetes                                                kube apiserver    HTTP                               kubectl               etcd                         kube apiserver                                                    kube apiserver                     kube apiserver                 apiserver              Kubernetes API                  generic apiserver       apiserver       OpenAPI          kube apiserver              API         API               ",
        "objectID": "posts/what-happens-when-k8s",
        "subtitle": "探寻 Kubectl 创建 Pod 背后的原理",
        "date": "2018-06-01T11:36:45.000Z",
        "draft": false,
        "categories": "kubernetes",
        "tags": [
            "kubernetes"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/kubernetes4.png"
            }
        ]
    },
    {
        "title": "Zabbix Api 简介和使用",
        "uri": "posts/zabbix-api-introduce-and-use",
        "content": "1  API   Zabbix API                                                              Zabbix API                             Zabbix API   1 8                    Zabbix         API      WEB              Zabbix API                                  JSON RPC            Zabbix                             Zabbix API                Zabbix                  API   JSON RPC                   POST            JSON    1  Zabbix API         API         JSON                                   POST    http   example com zabbix api_jsonrpc php    JSON            HTTP Header Content Type     application jsonrequest application json rpc application json       http   example com zabbix   Zabbix     api_jsonrpc php    API PHP                       SESSIONID     SESSIONID             POST        JSON                      curl    API        SESSIONID   curl  s  X POST  H  Content Type application json   d          jsonrpc    2 0      method    host get      params        user    Admin      password    zabbix          id   1      http   172 16 241 130 zabbix api_jsonrpc php   python  m json tool    jsonrpc    2 0    result    581cc92624202bddaeff3a90cca181dc    id   1        SESSIONID     API   host get      hostid   curl  s  X POST  H  Content Type application json   d          jsonrpc    2 0      method    host get      params        output     hostid           auth    581cc92624202bddaeff3a90cca181dc      id   1      http   172 16 241 130 zabbix api_jsonrpc php   python  m json tool    jsonrpc    2 0    result        hostid    10084        id   1          jsonrpc    2 0        JSON RPC                         method    method name                    host create item update     params        JSON                         name     key_                    Zabbix API           id   1          JSON                   id                                auth    581cc92624202bddaeff3a90cca181dc           authentication token          API      API              ID     python    API           python 3             zabbix   API        pip    zabbix api       pip install zabbix api   pip list iniparse  0 3 1  ordereddict  1 2  pip  8 1 0  pycurl  7 19 0  pygpgme  0 1  setuptools  19 6 2  urlgrabber  3 9 1  yum metadata parser  1 1 2  zabbix api  0 4         hostid     python            vim get_hostid py    usr bin env python encoding  utf 8 zabbix_api import ZabbixAPI server    http   172 16 241 130 zabbix  username    Admin  password    zabbix  zapi   ZabbixAPI server server  path     log_level 0  zapi login username  password          hostid hostinfo zapi host get   output   extend   filter    host   Zabbix server     hostid_01 hostinfo0 print hostid_01           hostid hostinfo zapi host get   output   extend   filter    name   Zabbix server     hostid_02 hostinfo0 print hostid_02               python get_hostid py  10084   10084                           python            vim get_items py    usr bin env python encoding  utf 8 zabbix_api import ZabbixAPI import pprint server    http   172 16 241 130 zabbix  username    Admin  password    zabbix  zapi   ZabbixAPI server server  path     log_level 0  zapi login username  password  result   zapi item get   output     itemids    key_     host    Zabbix server    pprint pprint result               python get_items py    itemid    23327    key_    agent hostname      itemid    23287    key_    agent ping      itemid    23288    key_    agent version      itemid    23289    key_    kernel maxfiles      itemid    23290    key_    kernel maxproc      itemid    23683    key_    mysql ping      itemid    23684    key    mysql status Bytesreceived       itemid    23685    key    mysql status Bytessent       snip     itemid    23635    key_    zabbix vmware buffer pfree       itemid    23274    key_    zabbix wcache history pfree       itemid    23275    key_    zabbix wcache index pfree       itemid    23276    key_    zabbix wcache trend pfree       itemid    23277    key_    zabbix wcache values                      python            vim get_items py    usr bin env python encoding  utf 8 zabbix_api import ZabbixAPI import pprint server    http   172 16 241 130 zabbix  username    Admin  password    zabbix  zapi   ZabbixAPI server server  path     log_level 0  zapi login username  password  result   zapi history get   output    extend    history   0   itemids    23296    sortfield    clock    sortorder    DESC    limit   10   pprint pprint result               python get_items py    clock    1483637416    itemid    23296    ns    833400783    value    0 0100      clock    1483637356    itemid    23296    ns    102860881    value    0 0300      clock    1483637296    itemid    23296    ns    609325047    value    0 0800      clock    1483637236    itemid    23296    ns    31887252    value    0 1300      snip                               python            vim history_data py    usr bin env python encoding  utf 8     Retrieves history data given numeric  either int float  item_id     zabbix_api import ZabbixAPI import pprint datetime import datetime import time server    http   172 16 241 130 zabbix  username    Admin  password",
        "objectID": "posts/zabbix-api-introduce-and-use",
        "subtitle": "Python 调用 Zabbix 的 Api",
        "date": "2017-01-05T10:19:18.000Z",
        "draft": false,
        "categories": "python",
        "tags": [
            "python"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    },
    {
        "title": "十分钟告诉你什么是最小二乘法",
        "uri": "posts/十分钟告诉你什么是最小二乘法",
        "content": "emsp  emsp                                                                                                                                                                                         emsp  emsp                                                                                                                        t1   t2   t_3           1 1   2 2   3 2                         y   C   Dt tag 1                                                                                                 C D                                                        begin cases  C   D   1       C   2D  2       C   3D  2  end cases  tag 2                                               AX   B tag 3        A    begin bmatrix  1   1    1   2    1   3  end bmatrix    X    begin bmatrix  C   D  end bmatrix    B    begin bmatrix  1    2    3  end bmatrix     emsp  emsp A                                 B                      AX B              AX   B   E tag 4        E    begin bmatrix  e1    e2    e3  end bmatrix    e1   C   D   1   e2   C   2D   2   e3   C   3D   2  E                left AX   B right  2      left E right  2          left E right  2    left e1 right  2    left e2 right  2    left e_3 right  2 tag 5     emsp  emsp      t1   t2   t3   x          y C Dt       s1   s2   s3        begin cases   left e1 right     left t1 s_1 right         left e2 right     left t2 s_2 right         left e3 right     left t3 s_3 right   end cases  tag 6       s1   s2   s3         p1   p2   p3    p    begin bmatrix p1    p2   p_3 end bmatrix            AX   B           AX   p             AX   p                                X                 A hat X    p tag 7      p B p                 P     p   PB tag 8                                                          P        P   A A TA    1 A T tag 9       8       p   A A TA    1 A TB tag 10      10    7       A hat X    A A TA    1 A TB               A TAX   A TB tag 11          hat X     begin bmatrix   frac 2  3       frac 1  2   end bmatrix                         y    frac 2  3     frac 1  2 t tag 12",
        "objectID": "posts/十分钟告诉你什么是最小二乘法",
        "subtitle": "理解最小二乘法",
        "date": "2016-06-04T13:28:25.000Z",
        "draft": false,
        "mathjax": true,
        "categories": "math",
        "tags": [
            "math"
        ],
        "bigimg": [
            {
                "src": "http://o7z41ciog.bkt.clouddn.com/picHD_12.png"
            }
        ]
    }
]